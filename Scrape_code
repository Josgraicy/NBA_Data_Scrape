import pandas as pd 
import requests
pd.set_option("display.max_columns", None)
import time
import numpy as np

urls="https://stats.nba.com/stats/leagueLeaders?LeagueID=00&PerMode=PerGame&Scope=S&Season=2023-24&SeasonType=Regular%20Season&StatCategory=PTS" 
r= requests.get(urls).json()
teable_heads=r["resultSet"]["headers"]
pd.DataFrame(r["resultSet"]["rowSet"], columns = teable_heads)
fd_columns=["Year", "Season_type"] + teable_heads
fd= pd.DataFrame(columns=fd_columns)
season_types = ["Regular%20Season", "Playoffs"]
years = ["2015-16", "2016-17", "2017-18", "2018-19", "2019-20", "2020-21", "2021-22", "2022-23"]

headers = {
    "Accept":"*/*",
    "Accept-Encoding": "gzip, deflate, br",
    "Accept-Language":"en-US,en;q=0.9",
    "Connection":"keep-alive",
    "Host":"stats.nba.com",
    "Origin":"https://www.nba.com",
    "Referer":"https://www.nba.com/",
    "Sec-Ch-Ua":'"Not_A Brand";v="8", "Chromium";v="120", "Opera GX";v="106"',
    'Sec-Ch-Ua-Mobile':'?0',
    'Sec-Ch-Ua-Platform':"Windows",
    'Sec-Fetch-Dest':'empty',
    'Sec-Fetch-Mode':'cors',
    'Sec-Fetch-Site':'same-site',
    'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 OPR/106.0.0.0'
}

start_loop = time.time()


for y in years:
    for s in season_types:
        api_url = "https://stats.nba.com/stats/leagueLeaders?LeagueID=00&PerMode=PerGame&Scope=S&Season="+y+"&SeasonType="+s+"&StatCategory=PTS" 
        r= requests.get(url= api_url).json()
        fd= pd.DataFrame(r["resultSet"]["rowSet"], columns = teable_heads)
        fd1= pd.DataFrame({"Year":[y for i in range (len(fd))],
                   "Season_type":[s for i in range (len(fd))]})
        fd2 = pd.concat([fd1,fd], axis = 1)
        fd = pd.concat([fd,fd2], axis= 0)
        print(f"Finished scraping datafor the {y} {s}.")
        lag = np.random.uniform(low =5,high =60)
        print(f"...waiting{round(lag,1)} seconds")
        time.sleep(lag)
        
print(f"Process completed, total run time:{round((time.time()-start_loop)/60,2)}")
with pd. ExcelWriter("NBA_PLAYER_DATA.xlsx") as writer:
    fd.to_excel(writer, sheet_name='Sheet1')
